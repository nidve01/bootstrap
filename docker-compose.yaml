version: '2'
# docker login -e $(gcloud auth list | grep ACTIVE | grep qubeship.io | awk '{print $2}')  -u _token -p "$(gcloud auth print-access-token)" https://gcr.io
services:
  api_tenant:
    env_file: .env
    environment:
      DEFAULT_LISTENER_PORT: ${TENANT_API_PORT}
      CONF_SERVER_TOKEN: ${CONF_SERVER_TOKEN}
      VAULT_TOKEN: ${VAULT_TOKEN}
      ENV_ID: ${ENV_ID}
    image: ${TENANT_API_IMAGE}:${TENANT_API_VERSION}
    ports:
      - "${TENANT_API_PORT}:${TENANT_API_PORT}"

  api_auth:
    env_file: .env
    environment:
      VIRTUAL_PATH: $AUTH_API_PATH
      DEFAULT_LISTENER_PORT: ${AUTH_API_PORT}
      CONF_SERVER_TOKEN: ${CONF_SERVER_TOKEN}
      VAULT_TOKEN: ${VAULT_TOKEN}
      ENV_ID: ${ENV_ID}
      TENANT_API_URL: http://api_tenant:${TENANT_API_PORT}/v1/tenants
    image: ${AUTH_API_IMAGE}:${AUTH_API_VERSION}
    depends_on:
      - api_tenant
    ports:
      - "${AUTH_API_PORT}:${AUTH_API_PORT}"
    links:
      - api_tenant

  api_project:
    env_file: .env
    environment:
      SPEC_PATH: $PROJECT_API_SPEC_PATH
      VIRTUAL_PATH: $PROJECT_API_PATH
      DEFAULT_LISTENER_PORT: ${PROJECT_API_PORT}
      CONF_SERVER_TOKEN: ${CONF_SERVER_TOKEN}
      VAULT_TOKEN: ${VAULT_TOKEN}
      ENV_ID: ${ENV_ID}
      AUTH_API_URL: http://api_auth:${AUTH_API_PORT}/v1/auth
      QUBE_MONGODB_PORT_27017_TCP_ADDR: qube_mongodb
      QUBE_MONGODB_PORT_27017_TCP_PORT: ${MONGO_PORT}
    image: ${PROJECT_API_IMAGE}:${PROJECT_API_VERSION}
    ports:
      - "${PROJECT_API_PORT}:${PROJECT_API_PORT}"
    depends_on:
      - api_auth
      - qube_mongodb
    links:
      - api_auth
      - qube_mongodb

  api_pipeline:
    env_file: .env
    environment:
      VIRTUAL_PATH: $PIPELINE_API_PATH
      DEFAULT_LISTENER_PORT: ${PIPELINE_API_PORT}
      CONF_SERVER_TOKEN: ${CONF_SERVER_TOKEN}
      VAULT_TOKEN: ${VAULT_TOKEN}
      ENV_ID: ${ENV_ID}
      AUTH_API_URL: http://api_auth:${AUTH_API_PORT}/v1/auth
    image: ${PIPELINE_API_IMAGE}:${PIPELINE_API_VERSION}
    ports:
      - "${PIPELINE_API_PORT}:${PIPELINE_API_PORT}"
    depends_on:
      - qube_postgres
      - api_auth
    links:
      - qube_postgres:${PIPELINE_DB_HOST}
      - api_auth

  api_toolchain:
    env_file: .env
    environment:
      VIRTUAL_PATH: $TOOLCHAIN_API_PATH
      DEFAULT_LISTENER_PORT: ${TOOLCHAIN_API_PORT}
      CONF_SERVER_TOKEN: ${CONF_SERVER_TOKEN}
      VAULT_TOKEN: ${VAULT_TOKEN}
      ENV_ID: ${ENV_ID}
      AUTH_API_URL: http://api_auth:${AUTH_API_PORT}/v1/auth
    image: ${TOOLCHAIN_API_IMAGE}:${TOOLCHAIN_API_VERSION}
    ports:
      - "${TOOLCHAIN_API_PORT}:${TOOLCHAIN_API_PORT}"
    depends_on:
      - api_auth
    links:
      - api_auth

  api_endpoints:
    env_file: .env
    environment:
      SPEC_PATH: $ENDPOINTS_API_SPEC_PATH
      VIRTUAL_PATH: $ENDPOINTS_API_PATH
      DEFAULT_LISTENER_PORT: ${ENDPOINTS_API_PORT}
      CONF_SERVER_TOKEN: ${CONF_SERVER_TOKEN}
      VAULT_TOKEN: ${VAULT_TOKEN}
      ENV_ID: ${ENV_ID}
      AUTH_API_URL: http://api_auth:${AUTH_API_PORT}/v1/auth
      QUBE_MONGODB_PORT_27017_TCP_ADDR: qube_mongodb
      QUBE_MONGODB_PORT_27017_TCP_PORT: ${MONGO_PORT}
    image: ${ENDPOINTS_API_IMAGE}:${ENDPOINTS_API_VERSION}
    depends_on:
      - api_auth
      - qube_mongodb
    ports:
      - "${ENDPOINTS_API_PORT}:${ENDPOINTS_API_PORT}"
    links:
      - api_auth
      - qube_mongodb

  qube_events_listener:
    env_file: .env
    environment:
      DEFAULT_LISTENER_PORT: ${QUBE_EVENTS_LISTENER_PORT}
      CONF_SERVER_TOKEN: ${CONF_SERVER_TOKEN}
      VAULT_TOKEN: ${VAULT_TOKEN}
      ENV_ID: ${ENV_ID}
    image: ${QUBE_EVENTS_LISTENER_IMAGE}:${QUBE_EVENTS_LISTENER_VERSION}


  api_registry:
    env_file: .env
    environment:
      DEFAULT_LISTENER_PORT: ${API_REGISTRY_INTERNAL_PORT}
      API_REGISTRY_PORT: ${API_REGISTRY_PORT}
      API_REGISTRY_INTERNAL_PORT: ${API_REGISTRY_INTERNAL_PORT}
      CONF_SERVER_TOKEN: ${CONF_SERVER_TOKEN}
      VAULT_TOKEN: ${VAULT_TOKEN}
      ENV_ID: ${ENV_ID}
    image: ${API_REGISTRY_IMAGE}:${API_REGISTRY_VERSION}
    ports:
      - "${API_REGISTRY_PORT}:${API_REGISTRY_PORT}"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
       - api_auth
       - qube_mongodb
       - qube_postgres
       - qube_events_listener
       - api_endpoints
       - api_pipeline
       - api_project
       - api_tenant
       - api_toolchain

  git_listener:
    env_file: .env
    environment:
      DEFAULT_LISTENER_PORT: ${GIT_LISTENER_PORT}
      CONF_SERVER_TOKEN: ${CONF_SERVER_TOKEN}
      VAULT_TOKEN: ${VAULT_TOKEN}
      ENV_ID: ${ENV_ID}
      QUBE_URL: http://qube_platform/api/v1/webhooks/
    image: ${GIT_LISTENER_IMAGE}:${GIT_LISTENER_VERSION}
    ports:
      - "${GIT_LISTENER_PORT}:${GIT_LISTENER_PORT}" 
    depends_on:
      - qube_platform
    links:
      - qube_platform


  qube_platform:
    env_file: .env
    environment:
      DEFAULT_LISTENER_PORT: ${QUBE_PLATFORM_PORT}
      CONF_SERVER_TOKEN: ${CONF_SERVER_TOKEN}
      VAULT_TOKEN: ${VAULT_TOKEN}
      ENV_ID: ${ENV_ID}
      PLATFORM_API_URL: https://${QUBE_PLATFORM_HOST}:${QUBE_PLATFORM_PORT}${QUBE_PLATFORM_API_PATH}
      PLATFORM_AUTH_URL: https://${QUBE_PLATFORM_HOST}:${QUBE_PLATFORM_PORT}${QUBE_PLATFORM_AUTH_PATH}

    image: ${QUBE_PLATFORM_IMAGE}:${QUBE_PLATFORM_VERSION}   
    ports:
      - "${QUBE_PLATFORM_PORT}:443" 
    depends_on:
      - qube_platform_postgres
      - qube_platform_mongodb
      - rabbitmq
    links: 
      - qube_platform_postgres:${PLATFORM_POSTGRES_DB_HOST}
      - qube_platform_mongodb:${PLATFORM_MONGO_DB_HOST}
      - rabbitmq

  qube_mongodb:
    env_file: .env
    image: ${MONGO_IMAGE}
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"

  qube_platform_mongodb:
    env_file: .env
    image: ${MONGO_IMAGE}:${MONGO_VERSION}
    ports:
      - "${PLATFORM_MONGO_PORT}:27017"

  #localtunnel:
    #image: efrecon/localtunnel
    #links:
     # - git_listener
    #command:
      #--local-host git_listener --port ${GIT_LISTENER_PORT} --host ${TUNNEL_HOST} --subdomain ${TUNNEL_SUBDOMAIN} --open
    #depends_on:
      #- git_listener

  qube_postgres:
    env_file: .env
    image: ${POSTGRES_IMAGE}

  rabbitmq:
      image: ${RABBITMQ_IMAGE}

  qube_platform_postgres:
    environment: 
      POSTGRES_USER: ${PLATFORM_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PLATFORM_POSTGRES_PASSWORD}
      POSTGRES_DB: ${PLATFORM_POSTGRES_DB}
    image: ${POSTGRES_IMAGE}